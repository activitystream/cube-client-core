{"version":3,"file":"cubejs-client-core.esm.js","sources":["../src/ResultSet.js","../src/SqlQuery.js","../src/Meta.js","../src/ProgressResult.js","../src/HttpTransport.js","../src/RequestError.js","../src/utils.js","../src/index.js"],"sourcesContent":["import {\n  groupBy, pipe, fromPairs, uniq, filter, map, unnest, dropLast, equals, reduce, minBy, maxBy, clone, mergeDeepLeft,\n  pluck, mergeAll, flatten,\n} from 'ramda';\nimport Moment from 'moment';\nimport momentRange from 'moment-range';\n\nconst moment = momentRange.extendMoment(Moment);\n\nconst TIME_SERIES = {\n  day: (range) => Array.from(range.by('day'))\n    .map(d => d.format('YYYY-MM-DDT00:00:00.000')),\n  month: (range) => Array.from(range.snapTo('month').by('month'))\n    .map(d => d.format('YYYY-MM-01T00:00:00.000')),\n  year: (range) => Array.from(range.snapTo('year').by('year'))\n    .map(d => d.format('YYYY-01-01T00:00:00.000')),\n  hour: (range) => Array.from(range.by('hour'))\n    .map(d => d.format('YYYY-MM-DDTHH:00:00.000')),\n  minute: (range) => Array.from(range.by('minute'))\n    .map(d => d.format('YYYY-MM-DDTHH:mm:00.000')),\n  second: (range) => Array.from(range.by('second'))\n    .map(d => d.format('YYYY-MM-DDTHH:mm:ss.000')),\n  week: (range) => Array.from(range.snapTo('isoweek').by('week'))\n    .map(d => d.startOf('isoweek').format('YYYY-MM-DDT00:00:00.000'))\n};\n\nconst DateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nconst LocalDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z?$/;\n\nconst groupByToPairs = (keyFn) => {\n  const acc = new Map();\n  \n  return (data) => {\n    data.forEach((row) => {\n      const key = keyFn(row);\n      \n      if (!acc.has(key)) {\n        acc.set(key, []);\n      }\n  \n      acc.get(key).push(row);\n    });\n    \n    return Array.from(acc.entries());\n  };\n};\n\nexport const QUERY_TYPE = {\n  REGULAR_QUERY: 'regularQuery',\n  COMPARE_DATE_RANGE_QUERY: 'compareDateRangeQuery',\n  BLENDING_QUERY: 'blendingQuery',\n};\n\nclass ResultSet {\n  static measureFromAxis(axisValues) {\n    return axisValues[axisValues.length - 1];\n  }\n     \n  static timeDimensionMember(td) {\n    return `${td.dimension}.${td.granularity}`;\n  }\n   \n  static deserialize(data, options = {}) {\n    return new ResultSet(data.loadResponse, options);\n  }\n  \n  constructor(loadResponse, options = {}) {\n    this.loadResponse = loadResponse;\n    \n    if (this.loadResponse.queryType != null) {\n      this.queryType = loadResponse.queryType;\n      this.loadResponses = loadResponse.results;\n    } else {\n      this.queryType = QUERY_TYPE.REGULAR_QUERY;\n      this.loadResponse.pivotQuery = {\n        ...loadResponse.query,\n        queryType: this.queryType\n      };\n      this.loadResponses = [loadResponse];\n    }\n    \n    if (!Object.values(QUERY_TYPE).includes(this.queryType)) {\n      throw new Error('Unknown query type');\n    }\n    \n    this.parseDateMeasures = options.parseDateMeasures;\n    this.options = options;\n    \n    this.backwardCompatibleData = [];\n  }\n  \n  drillDown(drillDownLocator, pivotConfig) {\n    if (this.queryType === QUERY_TYPE.COMPARE_DATE_RANGE_QUERY) {\n      throw new Error('compareDateRange drillDown query is not currently supported');\n    }\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      throw new Error('Data blending drillDown query is not currently supported');\n    }\n    \n    const { xValues = [], yValues = [] } = drillDownLocator;\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig);\n\n    const values = [];\n    normalizedPivotConfig.x.forEach((member, currentIndex) => values.push([member, xValues[currentIndex]]));\n    normalizedPivotConfig.y.forEach((member, currentIndex) => values.push([member, yValues[currentIndex]]));\n\n    const { filters: parentFilters = [], segments = [] } = this.query();\n    const { measures } = this.loadResponses[0].annotation;\n    let [, measureName] = values.find(([member]) => member === 'measures') || [];\n\n    if (measureName === undefined) {\n      [measureName] = Object.keys(measures);\n    }\n\n    if (!(measures[measureName] && measures[measureName].drillMembers || []).length) {\n      return null;\n    }\n\n    const filters = [\n      {\n        member: measureName,\n        operator: 'measureFilter',\n      },\n      ...parentFilters\n    ];\n    const timeDimensions = [];\n\n    values.filter(([member]) => member !== 'measures')\n      .forEach(([member, value]) => {\n        const [cubeName, dimension, granularity] = member.split('.');\n\n        if (granularity !== undefined) {\n          const range = moment.range(value, value).snapTo(\n            granularity\n          );\n\n          timeDimensions.push({\n            dimension: [cubeName, dimension].join('.'),\n            dateRange: [\n              range.start,\n              range.end\n            ].map((dt) => dt.format(moment.HTML5_FMT.DATETIME_LOCAL_MS)),\n          });\n        } else if (value == null) {\n          filters.push({\n            member,\n            operator: 'notSet',\n          });\n        } else {\n          filters.push({\n            member,\n            operator: 'equals',\n            values: [value.toString()],\n          });\n        }\n      });\n    \n    const { query } = this.loadResponses[0];\n    if (\n      timeDimensions.length === 0 &&\n      query.timeDimensions.length > 0 &&\n      query.timeDimensions[0].granularity == null\n    ) {\n      timeDimensions.push(query.timeDimensions[0]);\n    }\n    \n    return {\n      ...measures[measureName].drillMembersGrouped,\n      filters,\n      ...(segments.length > 0 ? { segments } : {}),\n      timeDimensions,\n      segments,\n      timezone: query.timezone\n    };\n  }\n\n  series(pivotConfig) {\n    return this.seriesNames(pivotConfig).map(({ title, key }) => ({\n      title,\n      key,\n      series: this.chartPivot(pivotConfig).map(({ category, x, ...obj }) => ({ value: obj[key], category, x }))\n    }));\n  }\n\n  axisValues(axis, resultIndex = 0) {\n    const { query } = this.loadResponses[resultIndex];\n    \n    return row => {\n      const value = (measure) => axis.filter(d => d !== 'measures')\n        .map(d => (row[d] != null ? row[d] : null)).concat(measure ? [measure] : []);\n        \n      if (axis.find(d => d === 'measures') && (query.measures || []).length) {\n        return query.measures.map(value);\n      }\n      \n      return [value()];\n    };\n  }\n\n  axisValuesString(axisValues, delimiter) {\n    const formatValue = (v) => {\n      if (v == null) {\n        return 'âˆ…';\n      } else if (v === '') {\n        return '[Empty string]';\n      } else {\n        return v;\n      }\n    };\n    return axisValues.map(formatValue).join(delimiter || ', ');\n  }\n  \n  static getNormalizedPivotConfig(query, pivotConfig = null) {\n    const defaultPivotConfig = {\n      x: [],\n      y: [],\n      fillMissingDates: true,\n      joinDateRange: false\n    };\n    \n    const {\n      measures = [],\n      dimensions = []\n    } = query;\n    \n    const timeDimensions = (query.timeDimensions || []).filter(td => !!td.granularity);\n    \n    pivotConfig = pivotConfig || (timeDimensions.length ? {\n      x: timeDimensions.map(td => ResultSet.timeDimensionMember(td)),\n      y: dimensions\n    } : {\n      x: dimensions,\n      y: []\n    });\n    \n    pivotConfig = mergeDeepLeft(pivotConfig, defaultPivotConfig);\n    \n    const substituteTimeDimensionMembers = axis => axis.map(\n      subDim => (\n        (\n          timeDimensions.find(td => td.dimension === subDim) &&\n          !dimensions.find(d => d === subDim)\n        ) ?\n          ResultSet.timeDimensionMember(query.timeDimensions.find(td => td.dimension === subDim)) :\n          subDim\n      )\n    );\n\n    pivotConfig.x = substituteTimeDimensionMembers(pivotConfig.x);\n    pivotConfig.y = substituteTimeDimensionMembers(pivotConfig.y);\n\n    const allIncludedDimensions = pivotConfig.x.concat(pivotConfig.y);\n    const allDimensions = timeDimensions.map(td => ResultSet.timeDimensionMember(td)).concat(dimensions);\n    \n    const dimensionFilter = (key) => allDimensions.includes(key) || key === 'measures';\n    \n    pivotConfig.x = pivotConfig.x.concat(\n      allDimensions.filter(d => !allIncludedDimensions.includes(d))\n    )\n      .filter(dimensionFilter);\n    pivotConfig.y = pivotConfig.y.filter(dimensionFilter);\n    \n    if (!pivotConfig.x.concat(pivotConfig.y).find(d => d === 'measures')) {\n      pivotConfig.y.push('measures');\n    }\n    if (!measures.length) {\n      pivotConfig.x = pivotConfig.x.filter(d => d !== 'measures');\n      pivotConfig.y = pivotConfig.y.filter(d => d !== 'measures');\n    }\n    \n    return pivotConfig;\n  }\n  \n  normalizePivotConfig(pivotConfig) {\n    return ResultSet.getNormalizedPivotConfig(this.loadResponse.pivotQuery, pivotConfig);\n  }\n\n  timeSeries(timeDimension) {\n    if (!timeDimension.granularity) {\n      return null;\n    }\n    let { dateRange } = timeDimension;\n    if (!dateRange) {\n      const dates = pipe(\n        map(\n          row => row[ResultSet.timeDimensionMember(timeDimension)] &&\n            moment(row[ResultSet.timeDimensionMember(timeDimension)])\n        ),\n        filter(r => !!r)\n      )(this.timeDimensionBackwardCompatibleData());\n\n      dateRange = dates.length && [\n        reduce(minBy(d => d.toDate()), dates[0], dates),\n        reduce(maxBy(d => d.toDate()), dates[0], dates)\n      ] || null;\n    }\n\n    if (!dateRange) {\n      return null;\n    }\n\n    const padToDay = timeDimension.dateRange ?\n      timeDimension.dateRange.find(d => d.match(DateRegex)) :\n      !['hour', 'minute', 'second'].includes(timeDimension.granularity);\n\n    const [start, end] = dateRange;\n    const range = moment.range(start, end);\n\n    if (!TIME_SERIES[timeDimension.granularity]) {\n      throw new Error(`Unsupported time granularity: ${timeDimension.granularity}`);\n    }\n\n    return TIME_SERIES[timeDimension.granularity](\n      padToDay ? range.snapTo('day') : range\n    );\n  }\n\n  pivot(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const { pivotQuery: query } = this.loadResponse;\n    \n    const pivotImpl = (resultIndex = 0) => {\n      let groupByXAxis = groupByToPairs(({ xValues }) => this.axisValuesString(xValues));\n      \n      let measureValue = (row, measure) => row[measure];\n  \n      if (\n        pivotConfig.fillMissingDates &&\n        pivotConfig.x.length === 1 &&\n        (equals(\n          pivotConfig.x,\n          (query.timeDimensions || [])\n            .filter(td => !!td.granularity)\n            .map(td => ResultSet.timeDimensionMember(td))\n        ))\n      ) {\n        const series = this.loadResponses.map(\n          (loadResponse) => this.timeSeries(loadResponse.query.timeDimensions[0])\n        );\n        \n        if (series[0]) {\n          groupByXAxis = (rows) => {\n            const byXValues = groupBy(\n              ({ xValues }) => moment(xValues[0]).format(moment.HTML5_FMT.DATETIME_LOCAL_MS),\n              rows\n            );\n            return series[resultIndex].map(d => [d, byXValues[d] || [{ xValues: [d], row: {} }]]);\n          };\n  \n          measureValue = (row, measure) => row[measure] || 0;\n        }\n      }\n  \n      const xGrouped = pipe(\n        map(row => this.axisValues(pivotConfig.x, resultIndex)(row).map(xValues => ({ xValues, row }))),\n        unnest,\n        groupByXAxis\n      )(this.timeDimensionBackwardCompatibleData(resultIndex));\n  \n      const allYValues = pipe(\n        map(\n          ([, rows]) => unnest(\n            // collect Y values only from filled rows\n            rows.filter(({ row }) => Object.keys(row).length > 0)\n              .map(({ row }) => this.axisValues(pivotConfig.y, resultIndex)(row))\n          )\n        ),\n        unnest,\n        uniq\n      )(xGrouped);\n      \n      return xGrouped.map(([, rows]) => {\n        const { xValues } = rows[0];\n        const yGrouped = pipe(\n          map(({ row }) => this.axisValues(pivotConfig.y, resultIndex)(row).map(yValues => ({ yValues, row }))),\n          unnest,\n          groupBy(({ yValues }) => this.axisValuesString(yValues))\n        )(rows);\n        \n        return {\n          xValues,\n          yValuesArray: unnest(allYValues.map(yValues => {\n            const measure = pivotConfig.x.find(d => d === 'measures') ?\n              ResultSet.measureFromAxis(xValues) :\n              ResultSet.measureFromAxis(yValues);\n              \n            return (yGrouped[this.axisValuesString(yValues)] ||\n              [{ row: {} }]).map(({ row }) => [yValues, measureValue(row, measure)]);\n          }))\n        };\n      });\n    };\n    \n    const pivots = this.loadResponses.length > 1\n      ? this.loadResponses.map((_, index) => pivotImpl(index))\n      : [];\n    \n    return pivots.length\n      ? this.mergePivots(pivots, pivotConfig.joinDateRange)\n      : pivotImpl();\n  }\n\n  mergePivots(pivots, joinDateRange) {\n    const minLengthPivot = pivots.reduce(\n      (memo, current) => (memo != null && current.length >= memo.length ? memo : current), null\n    );\n    \n    return minLengthPivot.map((_, index) => {\n      const xValues = joinDateRange\n        ? [pivots.map((pivot) => pivot[index] && pivot[index].xValues || []).join(', ')]\n        : minLengthPivot[index].xValues;\n  \n      return {\n        xValues,\n        yValuesArray: unnest(pivots.map((pivot) => pivot[index].yValuesArray))\n      };\n    });\n  }\n  \n  pivotedRows(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  chartPivot(pivotConfig) {\n    const validate = (value) => {\n      if (this.parseDateMeasures && LocalDateRegex.test(value)) {\n        return new Date(value);\n      } else if (!Number.isNaN(Number.parseFloat(value))) {\n        return Number.parseFloat(value);\n      }\n\n      return value;\n    };\n\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    const aliasSeries = (yValues, i) => {\n      // manual alias\n      if (pivotConfig && pivotConfig.aliasSeries && pivotConfig.aliasSeries[i]) {\n        return [pivotConfig.aliasSeries[i], ...yValues];\n      } else if (duplicateMeasures.has(yValues[0])) {\n        return [i, ...yValues];\n      }\n      return [yValues];\n    };\n    \n    return this.pivot(pivotConfig).map(({ xValues, yValuesArray }) => ({\n      category: this.axisValuesString(xValues, ','), // TODO deprecated\n      x: this.axisValuesString(xValues, ','),\n      xValues,\n      ...(\n        yValuesArray\n          .map(([yValues, m], i) => ({\n            [this.axisValuesString(aliasSeries(yValues, i), ',')]: m && validate(m),\n          }))\n          .reduce((a, b) => Object.assign(a, b), {})\n      )\n    }));\n  }\n\n  tablePivot(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const isMeasuresPresent = normalizedPivotConfig.x.concat(normalizedPivotConfig.y).includes('measures');\n    \n    return this.pivot(normalizedPivotConfig).map(({ xValues, yValuesArray }) => fromPairs(\n      normalizedPivotConfig.x\n        .map((key, index) => [key, xValues[index]])\n        .concat(\n          isMeasuresPresent ? yValuesArray.map(([yValues, measure]) => [\n            yValues.length ? yValues.join() : 'value',\n            measure\n          ]) : []\n        )\n    ));\n  }\n\n  tableColumns(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const annotations = pipe(\n      pluck('annotation'),\n      reduce(mergeDeepLeft(), {})\n    )(this.loadResponses);\n    const flatMeta = Object.values(annotations).reduce((a, b) => ({ ...a, ...b }), {});\n    const schema = {};\n    \n    const extractFields = (key) => {\n      const { title, shortTitle, type, format, meta } = flatMeta[key] || {};\n  \n      return {\n        key,\n        title,\n        shortTitle,\n        type,\n        format,\n        meta\n      };\n    };\n    \n    const pivot = this.pivot(normalizedPivotConfig);\n    \n    (pivot[0] && pivot[0].yValuesArray || []).forEach(([yValues]) => {\n      if (yValues.length > 0) {\n        let currentItem = schema;\n    \n        yValues.forEach((value, index) => {\n          currentItem[value] = {\n            key: value,\n            memberId: normalizedPivotConfig.y[index] === 'measures'\n              ? value\n              : normalizedPivotConfig.y[index],\n            children: (currentItem[value] && currentItem[value].children) || {}\n          };\n    \n          currentItem = currentItem[value].children;\n        });\n      }\n    });\n    \n    const toColumns = (item = {}, path = []) => {\n      if (Object.keys(item).length === 0) {\n        return [];\n      }\n  \n      return Object.values(item).map(({ key, ...currentItem }) => {\n        const children = toColumns(currentItem.children, [\n          ...path,\n          key\n        ]);\n\n        const { title, shortTitle, ...fields } = extractFields(currentItem.memberId);\n        \n        const dimensionValue = key !== currentItem.memberId || title == null ? key : '';\n        \n        if (!children.length) {\n          return {\n            ...fields,\n            key,\n            dataIndex: [...path, key].join(),\n            title: [title, dimensionValue].join(' ').trim(),\n            shortTitle: dimensionValue || shortTitle,\n          };\n        }\n  \n        return {\n          ...fields,\n          key,\n          title: [title, dimensionValue].join(' ').trim(),\n          shortTitle: dimensionValue || shortTitle,\n          children,\n        };\n      });\n    };\n    \n    let otherColumns = [];\n    \n    if (!pivot.length && normalizedPivotConfig.y.includes('measures')) {\n      otherColumns = (this.loadResponses[0].query.measures || []).map(\n        (key) => ({ ...extractFields(key), dataIndex: key })\n      );\n    }\n    \n    // Syntatic column to display the measure value\n    if (!normalizedPivotConfig.y.length && normalizedPivotConfig.x.includes('measures')) {\n      otherColumns.push({\n        key: 'value',\n        dataIndex: 'value',\n        title: 'Value',\n        shortTitle: 'Value',\n        type: 'string',\n      });\n    }\n    \n    return normalizedPivotConfig.x\n      .map((key) => {\n        if (key === 'measures') {\n          return {\n            key: 'measures',\n            dataIndex: 'measures',\n            title: 'Measures',\n            shortTitle: 'Measures',\n            type: 'string',\n          };\n        }\n\n        return ({ ...extractFields(key), dataIndex: key });\n      })\n      .concat(toColumns(schema))\n      .concat(otherColumns);\n  }\n\n  totalRow() {\n    return this.chartPivot()[0];\n  }\n\n  categories(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  seriesNames(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const measures = pipe(\n      pluck('annotation'),\n      pluck('measures'),\n      mergeAll\n    )(this.loadResponses);\n\n    const seriesNames = unnest(this.loadResponses.map((_, index) => pipe(\n      map(this.axisValues(pivotConfig.y, index)),\n      unnest,\n      uniq\n    )(\n      this.timeDimensionBackwardCompatibleData(index)\n    )));\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    const aliasSeries = (yValues, i) => {\n      if (pivotConfig && pivotConfig.aliasSeries && pivotConfig.aliasSeries[i]) {\n        return [pivotConfig.aliasSeries[i], ...yValues];\n      } else if (duplicateMeasures.has(yValues[0])) {\n        return [i, ...yValues];\n      }\n      return yValues;\n    };\n\n    return seriesNames.map((axisValues, i) => {\n      const aliasedAxis = aliasSeries(axisValues, i);\n      return {\n        title: this.axisValuesString(\n          pivotConfig.y.find(d => d === 'measures') ?\n            dropLast(1, aliasedAxis).concat(\n              measures[\n                ResultSet.measureFromAxis(axisValues)\n              ].title\n            ) :\n            aliasedAxis, ', '\n        ),\n        key: this.axisValuesString(aliasedAxis, ','),\n        yValues: axisValues\n      };\n    });\n  }\n\n  query() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n    \n    return this.loadResponses[0].query;\n  }\n  \n  pivotQuery() {\n    return this.loadResponse.pivotQuery || null;\n  }\n  \n  rawData() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n    \n    return this.loadResponses[0].data;\n  }\n  \n  annotation() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n    \n    return this.loadResponses[0].annotation;\n  }\n\n  timeDimensionBackwardCompatibleData(resultIndex = 0) {\n    if (!this.backwardCompatibleData[resultIndex]) {\n      const { data, query } = this.loadResponses[resultIndex];\n      const timeDimensions = (query.timeDimensions || []).filter(td => !!td.granularity);\n\n      this.backwardCompatibleData[resultIndex] = data.map(row => (\n        {\n          ...row,\n          ...(\n            fromPairs(Object.keys(row)\n              .filter(\n                field => timeDimensions.find(d => d.dimension === field) &&\n                  !row[ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field))]\n              ).map(field => (\n                [ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field)), row[field]]\n              )))\n          )\n        }\n      ));\n    }\n    \n    return this.backwardCompatibleData[resultIndex];\n  }\n  \n  decompose() {\n    return this.loadResponses.map((result) => new ResultSet({\n      queryType: QUERY_TYPE.REGULAR_QUERY,\n      pivotQuery: {\n        ...result.query,\n        queryType: QUERY_TYPE.REGULAR_QUERY,\n      },\n      results: [result]\n    }, this.options));\n  }\n  \n  serialize() {\n    return {\n      loadResponse: clone(this.loadResponse)\n    };\n  }\n}\n\nexport default ResultSet;\n","export default class SqlQuery {\n  constructor(sqlQuery) {\n    this.sqlQuery = sqlQuery;\n  }\n\n  rawQuery() {\n    return this.sqlQuery.sql;\n  }\n\n  sql() {\n    return this.rawQuery().sql[0];\n  }\n}\n","/**\n * @module @cubejs-client/core\n */\n\nimport { unnest, fromPairs } from 'ramda';\n\nconst memberMap = (memberArray) => fromPairs(memberArray.map(m => [m.name, m]));\n\nconst operators = {\n  string: [\n    { name: 'contains', title: 'contains' },\n    { name: 'notContains', title: 'does not contain' },\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' }\n  ],\n  number: [\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' },\n    { name: 'gt', title: '>' },\n    { name: 'gte', title: '>=' },\n    { name: 'lt', title: '<' },\n    { name: 'lte', title: '<=' }\n  ]\n};\n\n/**\n * Contains information about available cubes and it's members.\n */\nclass Meta {\n  constructor(metaResponse) {\n    this.meta = metaResponse;\n    const { cubes } = this.meta;\n    this.cubes = cubes;\n    this.cubesMap = fromPairs(cubes.map(c => [\n      c.name,\n      { measures: memberMap(c.measures), dimensions: memberMap(c.dimensions), segments: memberMap(c.segments) }\n    ]));\n  }\n\n  membersForQuery(query, memberType) {\n    return unnest(this.cubes.map(c => c[memberType]));\n  }\n  \n  resolveMember(memberName, memberType) {\n    const [cube] = memberName.split('.');\n    if (!this.cubesMap[cube]) {\n      return { title: memberName, error: `Cube not found ${cube} for path '${memberName}'` };\n    }\n    const memberTypes = Array.isArray(memberType) ? memberType : [memberType];\n    const member = memberTypes\n      .map(type => this.cubesMap[cube][type] && this.cubesMap[cube][type][memberName])\n      .find(m => m);\n    if (!member) {\n      return { title: memberName, error: `Path not found '${memberName}'` };\n    }\n    return member;\n  }\n\n  defaultTimeDimensionNameFor(memberName) {\n    const [cube] = memberName.split('.');\n    if (!this.cubesMap[cube]) {\n      return null;\n    }\n    return Object.keys(this.cubesMap[cube].dimensions || {})\n      .find(d => this.cubesMap[cube].dimensions[d].type === 'time');\n  }\n\n  filterOperatorsForMember(memberName, memberType) {\n    const member = this.resolveMember(memberName, memberType);\n    return operators[member.type] || operators.string;\n  }\n}\n\nexport default Meta;\n","export default class ProgressResult {\n  constructor(progressResponse) {\n    this.progressResponse = progressResponse;\n  }\n\n  stage() {\n    return this.progressResponse.stage;\n  }\n\n  timeElapsed() {\n    return this.progressResponse.timeElapsed;\n  }\n}\n","import fetch from 'cross-fetch';\nimport 'url-search-params-polyfill';\n\nclass HttpTransport {\n  constructor({ authorization, apiUrl, method, headers = {}, credentials }) {\n    this.authorization = authorization;\n    this.apiUrl = apiUrl;\n    this.method = method;\n    this.headers = headers;\n    this.credentials = credentials;\n  }\n\n  request(method, { baseRequestId, ...params }) {\n    let spanCounter = 1;\n    const searchParams = new URLSearchParams(\n      params && Object.keys(params)\n        .map(k => ({ [k]: typeof params[k] === 'object' ? JSON.stringify(params[k]) : params[k] }))\n        .reduce((a, b) => ({ ...a, ...b }), {})\n    );\n\n    let url = `${this.apiUrl}/${method}${searchParams.toString().length ? `?${searchParams}` : ''}`;\n    \n    this.method = this.method || (url.length < 2000 ? 'GET' : 'POST');\n    if (this.method === 'POST') {\n      url = `${this.apiUrl}/${method}`;\n      this.headers['Content-Type'] = 'application/json';\n    }\n\n    // Currently, all methods make GET requests. If a method makes a request with a body payload,\n    // remember to add {'Content-Type': 'application/json'} to the header.\n    const runRequest = () => fetch(url, {\n      method: this.method,\n      headers: {\n        Authorization: this.authorization,\n        'x-request-id': baseRequestId && `${baseRequestId}-span-${spanCounter++}`,\n        ...this.headers\n      },\n      credentials: this.credentials,\n      body: this.method === 'POST' ? JSON.stringify(params) : null\n    });\n\n    return {\n      async subscribe(callback) {\n        const result = await runRequest();\n        return callback(result, () => this.subscribe(callback));\n      }\n    };\n  }\n}\n\nexport default HttpTransport;\n","export default class RequestError extends Error {\n  constructor(message, response) {\n    super(message);\n    this.response = response;\n  }\n}\n","export const DEFAULT_GRANULARITY = 'day';\n\nexport function defaultOrder(query) {\n  const granularity = (query.timeDimensions || []).find((d) => d.granularity);\n\n  if (granularity) {\n    return {\n      [granularity.dimension]: 'asc'\n    };\n  } else if ((query.measures || []).length > 0 && (query.dimensions || []).length > 0) {\n    return {\n      [query.measures[0]]: 'desc'\n    };\n  } else if ((query.dimensions || []).length > 0) {\n    return {\n      [query.dimensions[0]]: 'asc'\n    };\n  }\n\n  return {};\n}\n\nexport function defaultHeuristics(newQuery, oldQuery = {}, options) {\n  const { meta, sessionGranularity } = options;\n  const granularity = sessionGranularity || DEFAULT_GRANULARITY;\n  let newState = {};\n\n  if (Array.isArray(newQuery) || Array.isArray(oldQuery)) {\n    return newQuery;\n  }\n\n  if (newQuery) {\n    if (\n      (oldQuery.timeDimensions || []).length === 1 &&\n      (newQuery.timeDimensions || []).length === 1 &&\n      newQuery.timeDimensions[0].granularity &&\n      oldQuery.timeDimensions[0].granularity !== newQuery.timeDimensions[0].granularity\n    ) {\n      newState = {\n        ...newState,\n        sessionGranularity: newQuery.timeDimensions[0].granularity,\n      };\n    }\n\n    if (\n      ((oldQuery.measures || []).length === 0 && (newQuery.measures || []).length > 0) ||\n      ((oldQuery.measures || []).length === 1 &&\n        (newQuery.measures || []).length === 1 &&\n        oldQuery.measures[0] !== newQuery.measures[0])\n    ) {\n      const defaultTimeDimension = meta.defaultTimeDimensionNameFor(newQuery.measures[0]);\n      newQuery = {\n        ...newQuery,\n        timeDimensions: defaultTimeDimension\n          ? [\n            {\n              dimension: defaultTimeDimension,\n              granularity,\n            },\n          ]\n          : [],\n      };\n\n      return {\n        ...newState,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: defaultTimeDimension ? 'line' : 'number',\n      };\n    }\n\n    if ((oldQuery.dimensions || []).length === 0 && (newQuery.dimensions || []).length > 0) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({ ...td, granularity: undefined })),\n      };\n\n      return {\n        ...newState,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: 'table',\n      };\n    }\n\n    if ((oldQuery.dimensions || []).length > 0 && (newQuery.dimensions || []).length === 0) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({\n          ...td,\n          granularity: td.granularity || granularity,\n        })),\n      };\n\n      return {\n        ...newState,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: (newQuery.timeDimensions || []).length ? 'line' : 'number',\n      };\n    }\n\n    if (\n      ((oldQuery.dimensions || []).length > 0 || (oldQuery.measures || []).length > 0) &&\n      (newQuery.dimensions || []).length === 0 &&\n      (newQuery.measures || []).length === 0\n    ) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: [],\n        filters: [],\n      };\n\n      return {\n        ...newState,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        sessionGranularity: null,\n      };\n    }\n    return newState;\n  }\n\n  if (newState.chartType) {\n    const newChartType = newState.chartType;\n    if (\n      (newChartType === 'line' || newChartType === 'area') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      !oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...newState,\n        pivotConfig: null,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity }],\n        },\n      };\n    }\n\n    if (\n      (newChartType === 'pie' || newChartType === 'table' || newChartType === 'number') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...newState,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity: undefined }],\n        },\n      };\n    }\n  }\n\n  return newState;\n}\n\nexport function isQueryPresent(query) {\n  return (Array.isArray(query) ? query : [query]).every(\n    (q) => (q.measures && q.measures.length) ||\n      (q.dimensions && q.dimensions.length) ||\n      (q.timeDimensions && q.timeDimensions.length)\n  );\n}\n\nexport function movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis) {\n  const nextPivotConfig = {\n    ...pivotConfig,\n    x: [...pivotConfig.x],\n    y: [...pivotConfig.y],\n  };\n  const id = pivotConfig[sourceAxis][sourceIndex];\n  const lastIndex = nextPivotConfig[destinationAxis].length - 1;\n\n  if (id === 'measures') {\n    destinationIndex = lastIndex + 1;\n  } else if (destinationIndex >= lastIndex && nextPivotConfig[destinationAxis][lastIndex] === 'measures') {\n    destinationIndex = lastIndex - 1;\n  }\n\n  nextPivotConfig[sourceAxis].splice(sourceIndex, 1);\n  nextPivotConfig[destinationAxis].splice(destinationIndex, 0, id);\n\n  return nextPivotConfig;\n}\n\nexport function moveItemInArray(list, sourceIndex, destinationIndex) {\n  const result = [...list];\n  const [removed] = result.splice(sourceIndex, 1);\n  result.splice(destinationIndex, 0, removed);\n\n  return result;\n}\n\nexport function flattenFilters(filters = []) {\n  return filters.reduce((memo, filter) => {\n    if (filter.or || filter.and) {\n      return [\n        ...memo,\n        ...flattenFilters(filter.or || filter.and)\n      ];\n    }\n    \n    return [...memo, filter];\n  }, []);\n}\n","import uuid from 'uuid/v4';\nimport ResultSet from './ResultSet';\nimport SqlQuery from './SqlQuery';\nimport Meta from './Meta';\nimport ProgressResult from './ProgressResult';\nimport HttpTransport from './HttpTransport';\nimport RequestError from './RequestError';\n\nconst API_URL = process.env.CUBEJS_API_URL;\n\nlet mutexCounter = 0;\n\nconst MUTEX_ERROR = 'Mutex has been changed';\n\nconst mutexPromise = (promise) => new Promise((resolve, reject) => {\n  promise.then(r => resolve(r), e => e !== MUTEX_ERROR && reject(e));\n});\n\nclass CubejsApi {\n  constructor(apiToken, options) {\n    if (typeof apiToken === 'object') {\n      options = apiToken;\n      apiToken = undefined;\n    }\n    options = options || {};\n    this.apiToken = apiToken;\n    this.apiUrl = options.apiUrl || API_URL;\n    this.method = options.method;\n    this.headers = options.headers || {};\n    this.credentials = options.credentials;\n    this.transport = options.transport || new HttpTransport({\n      authorization: typeof apiToken === 'function' ? undefined : apiToken,\n      apiUrl: this.apiUrl,\n      method: this.method,\n      headers: this.headers,\n      credentials: this.credentials\n    });\n    this.pollInterval = options.pollInterval || 5;\n    this.parseDateMeasures = options.parseDateMeasures;\n  }\n\n  request(method, params) {\n    return this.transport.request(method, { baseRequestId: uuid(), ...params });\n  }\n\n  loadMethod(request, toResult, options, callback) {\n    const mutexValue = ++mutexCounter;\n    if (typeof options === 'function' && !callback) {\n      callback = options;\n      options = undefined;\n    }\n\n    options = options || {};\n\n    const mutexKey = options.mutexKey || 'default';\n    if (options.mutexObj) {\n      options.mutexObj[mutexKey] = mutexValue;\n    }\n\n    const requestPromise = this.updateTransportAuthorization().then(() => request());\n\n    let unsubscribed = false;\n\n    const checkMutex = async () => {\n      const requestInstance = await requestPromise;\n\n      if (options.mutexObj && options.mutexObj[mutexKey] !== mutexValue) {\n        unsubscribed = true;\n        if (requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n        throw MUTEX_ERROR;\n      }\n    };\n\n    const loadImpl = async (response, next) => {\n      const requestInstance = await requestPromise;\n\n      const subscribeNext = async () => {\n        if (options.subscribe && !unsubscribed) {\n          if (requestInstance.unsubscribe) {\n            return next();\n          } else {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n            return next();\n          }\n        }\n        return null;\n      };\n\n      const continueWait = async (wait) => {\n        if (!unsubscribed) {\n          if (wait) {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n          }\n          return next();\n        }\n        return null;\n      };\n\n      await this.updateTransportAuthorization();\n\n      if (response.status === 502) {\n        await checkMutex();\n        return continueWait(true);\n      }\n      const body = await response.json();\n      if (body.error === 'Continue wait') {\n        await checkMutex();\n        if (options.progressCallback) {\n          options.progressCallback(new ProgressResult(body));\n        }\n        return continueWait();\n      }\n      if (response.status !== 200) {\n        await checkMutex();\n        if (!options.subscribe && requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n        \n        const error = new RequestError(body.error, body); // TODO error class\n        if (callback) {\n          callback(error);\n        } else {\n          throw error;\n        }\n\n        return subscribeNext();\n      }\n      await checkMutex();\n      if (!options.subscribe && requestInstance.unsubscribe) {\n        await requestInstance.unsubscribe();\n      }\n      const result = toResult(body);\n      if (callback) {\n        callback(null, result);\n      } else {\n        return result;\n      }\n\n      return subscribeNext();\n    };\n\n    const promise = requestPromise.then(requestInstance => mutexPromise(requestInstance.subscribe(loadImpl)));\n\n    if (callback) {\n      return {\n        unsubscribe: async () => {\n          const requestInstance = await requestPromise;\n\n          unsubscribed = true;\n          if (requestInstance.unsubscribe) {\n            return requestInstance.unsubscribe();\n          }\n          return null;\n        }\n      };\n    } else {\n      return promise;\n    }\n  }\n\n  async updateTransportAuthorization() {\n    if (typeof this.apiToken === 'function') {\n      const token = await this.apiToken();\n      if (this.transport.authorization !== token) {\n        this.transport.authorization = token;\n      }\n    }\n  }\n\n  load(query, options, callback) {\n    const queryParams = (options && options.queryParams) || {};\n    return this.loadMethod(\n      () => this.request('load', {\n        ...queryParams,\n        ...{\n          query,\n          queryType: 'multi'\n        }\n      }),\n      (response) => new ResultSet(response, { parseDateMeasures: this.parseDateMeasures }),\n      options,\n      callback\n    );\n  }\n\n  sql(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('sql', { query }),\n      (response) => (Array.isArray(response) ? response.map((body) => new SqlQuery(body)) : new SqlQuery(response)),\n      options,\n      callback\n    );\n  }\n\n  meta(options, callback) {\n    return this.loadMethod(\n      () => this.request('meta'),\n      (body) => new Meta(body),\n      options,\n      callback\n    );\n  }\n  \n  dryRun(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('dry-run', { query }),\n      (response) => response,\n      options,\n      callback\n    );\n  }\n\n  subscribe(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('subscribe', {\n        query,\n        queryType: 'multi'\n      }),\n      (body) => new ResultSet(body, { parseDateMeasures: this.parseDateMeasures }),\n      { ...options, subscribe: true },\n      callback\n    );\n  }\n}\n\nexport default (apiToken, options) => new CubejsApi(apiToken, options);\n\nexport { HttpTransport, ResultSet };\nexport {\n  defaultHeuristics,\n  movePivotItem,\n  isQueryPresent,\n  moveItemInArray,\n  defaultOrder,\n  flattenFilters\n} from './utils';\n"],"names":["moment","momentRange","extendMoment","Moment","TIME_SERIES","day","range","Array","from","by","map","d","format","month","snapTo","year","hour","minute","second","week","startOf","DateRegex","LocalDateRegex","groupByToPairs","keyFn","acc","Map","data","forEach","row","key","has","set","get","push","entries","QUERY_TYPE","REGULAR_QUERY","COMPARE_DATE_RANGE_QUERY","BLENDING_QUERY","ResultSet","axisValues","length","td","dimension","granularity","options","loadResponse","queryType","loadResponses","results","pivotQuery","query","Object","values","includes","Error","parseDateMeasures","backwardCompatibleData","drillDownLocator","pivotConfig","xValues","yValues","normalizedPivotConfig","normalizePivotConfig","x","member","currentIndex","y","filters","parentFilters","segments","measures","annotation","find","measureName","undefined","keys","drillMembers","operator","timeDimensions","filter","value","split","cubeName","join","dateRange","start","end","dt","HTML5_FMT","DATETIME_LOCAL_MS","toString","drillMembersGrouped","timezone","seriesNames","title","series","chartPivot","category","obj","axis","resultIndex","measure","concat","delimiter","formatValue","v","getNormalizedPivotConfig","timeDimension","dates","pipe","timeDimensionMember","r","timeDimensionBackwardCompatibleData","reduce","minBy","toDate","maxBy","padToDay","match","pivotImpl","groupByXAxis","axisValuesString","measureValue","fillMissingDates","equals","timeSeries","rows","byXValues","groupBy","xGrouped","unnest","allYValues","uniq","yGrouped","yValuesArray","measureFromAxis","pivots","_","index","mergePivots","joinDateRange","minLengthPivot","memo","current","pivot","validate","test","Date","Number","isNaN","parseFloat","duplicateMeasures","Set","allMeasures","flatten","e","i","a","indexOf","m","add","aliasSeries","b","assign","isMeasuresPresent","fromPairs","annotations","pluck","mergeDeepLeft","flatMeta","schema","extractFields","shortTitle","type","meta","currentItem","memberId","children","toColumns","item","path","fields","dimensionValue","dataIndex","trim","otherColumns","mergeAll","aliasedAxis","dropLast","field","result","clone","defaultPivotConfig","dimensions","substituteTimeDimensionMembers","subDim","allIncludedDimensions","allDimensions","dimensionFilter","SqlQuery","sqlQuery","sql","rawQuery","memberMap","memberArray","name","operators","string","number","Meta","metaResponse","cubes","cubesMap","c","memberType","memberName","cube","error","memberTypes","isArray","resolveMember","ProgressResult","progressResponse","stage","timeElapsed","HttpTransport","authorization","apiUrl","method","headers","credentials","baseRequestId","params","spanCounter","searchParams","URLSearchParams","k","JSON","stringify","url","runRequest","fetch","Authorization","body","subscribe","callback","RequestError","message","response","DEFAULT_GRANULARITY","defaultOrder","defaultHeuristics","newQuery","oldQuery","sessionGranularity","newState","defaultTimeDimension","defaultTimeDimensionNameFor","shouldApplyHeuristicOrder","chartType","newChartType","isQueryPresent","every","q","movePivotItem","sourceIndex","destinationIndex","sourceAxis","destinationAxis","nextPivotConfig","id","lastIndex","splice","moveItemInArray","list","removed","flattenFilters","or","and","API_URL","mutexCounter","MUTEX_ERROR","mutexPromise","promise","Promise","resolve","reject","then","CubejsApi","apiToken","transport","pollInterval","request","uuid","toResult","mutexValue","mutexKey","mutexObj","requestPromise","updateTransportAuthorization","unsubscribed","checkMutex","requestInstance","unsubscribe","loadImpl","next","subscribeNext","setTimeout","continueWait","wait","status","json","progressCallback","token","queryParams","loadMethod"],"mappings":"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"}